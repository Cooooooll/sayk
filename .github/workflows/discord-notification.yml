name: Discord Notifications

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  issues:
    types: [opened, closed, reopened]
  watch:
    types: [started]
  fork:
    types: [created]
  gollum:  # Wiki updates
  release:
    types: [published]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # First validate the webhook URL is properly formatted
      - name: Validate Webhook
        run: |
          if [[ "${{ secrets.DISCORD_WEBHOOK }}" =~ \?wait=true$ ]]; then
            echo "DISCORD_WEBHOOK_CLEAN=$(echo ${{ secrets.DISCORD_WEBHOOK }} | sed 's/?wait=true//')" >> $GITHUB_ENV
          elif [[ "${{ secrets.DISCORD_WEBHOOK }}" =~ /[0-9]+$ ]]; then
            echo "DISCORD_WEBHOOK_CLEAN=${{ secrets.DISCORD_WEBHOOK }}" >> $GITHUB_ENV
          else
            echo "DISCORD_WEBHOOK_CLEAN=${{ secrets.DISCORD_WEBHOOK }}" >> $GITHUB_ENV
          fi

      # Add a delay to avoid rate limiting
      - name: Wait to avoid rate limits
        run: sleep 2

      - name: Discord Webhook
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ env.DISCORD_WEBHOOK_CLEAN }}
          title: "${{ github.event_name }} on Testify"
          description: "${{ github.event.head_commit.message || github.event.issue.title || 'Repository event' }}"
          url: "${{ github.event.head_commit.url || github.event.issue.html_url || github.event.repository.html_url }}"
          color: 0x58B9FF
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          # Use content field instead of individual author fields
          content: "**Action by:** [${{ github.actor }}](https://github.com/${{ github.actor }})\n**Repository:** [${{ github.repository }}](https://github.com/${{ github.repository }})"
          nodetail: false
          notimestamp: false